using UnityEngine;
using System.Collections;

public class PlayerControllerPC2 : MonoBehaviour
{
    public Transform Player;
    public Transform[] Spawners, Obs;
    public GameObject[] Others;
    private Vector2 fp, lp;
    private float dragDistance = Screen.height * 0.15f;
    private bool CanProceed;
    private Animator PlayerAnim;
    private UIManagement UIM;

    // Use this for initialization
    void Start()
    {
        CanProceed = true;
        Player.position = Vector2.zero;
        PlayerAnim = Player.GetComponent<Animator>();
        UIM = GameObject.Find("ScoreCanvas").GetComponent<UIManagement>();
        InvokeRepeating("Spawn1", 4, 1.5f);
    }

    // Update is called once per frame
    void Update()
    {
        if (Input.GetMouseButtonDown(0) && CanProceed)
        {
            fp = Input.mousePosition;
        }
        if (Input.GetMouseButtonUp(0) && CanProceed)
        {
            lp = Input.mousePosition;
            float xDistance = Mathf.Abs(lp.x - fp.x);
            float yDistance = Mathf.Abs(lp.y - fp.y);

            if (xDistance > dragDistance || yDistance > dragDistance)
            {
                if (xDistance > yDistance)
                {
                    if (lp.x > fp.x)
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            PlayerAnim.SetInteger("player", 2);
                        }
                        Invoke("LetItGo", 1.2f);
                    }
                    else
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            PlayerAnim.SetInteger("player", 1);
                        }
                        Invoke("LetItGo", 1.2f);
                    }
                }
                else
                {
                    if (lp.y > fp.y)
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            PlayerAnim.SetInteger("player", 3);
                        }
                        Invoke("LetItGo", 1.2f);
                    }
                    else
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            PlayerAnim.SetInteger("player", 4);
                        }
                        Invoke("LetItGo", 1.2f);
                    }
                }
            }
        }
    }

    void Spawn1()
    {
        int rand = Random.Range(0, 4);
        StartCoroutine(GetArrow(rand));
    }

    IEnumerator GetArrow(int dir)
    {
        yield return new WaitForSeconds(0.1f);
        if (dir == 0)
        {
            Others[dir].SetActive(true);
            iTween.MoveTo(Others[dir], iTween.Hash("x", 8.3f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs[dir].gameObject, Spawners[dir].position, Quaternion.identity);
            Invoke("PlayEffect", 0.5f);
            yield return new WaitForSeconds(0.5f);
            Others[dir].SetActive(false);
        }
        else if (dir == 1)
        {
            Others[dir].SetActive(true);
            iTween.MoveTo(Others[dir], iTween.Hash("y", -4.5f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs[dir].gameObject, Spawners[dir].position, Quaternion.identity);
            Invoke("PlayEffect", 0.5f);
            yield return new WaitForSeconds(0.5f);
            Others[dir].SetActive(false);
        }
        else if (dir == 2)
        {
            Others[dir].SetActive(true);
            iTween.MoveTo(Others[dir], iTween.Hash("x", -8.3f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs[dir].gameObject, Spawners[dir].position, Quaternion.identity);
            Invoke("PlayEffect", 0.5f);
            yield return new WaitForSeconds(0.5f);
            Others[dir].SetActive(false);
        }
        else if (dir == 3)
        {
            Others[dir].SetActive(true);
            iTween.MoveTo(Others[dir], iTween.Hash("y", 4.5f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs[dir].gameObject, Spawners[dir].position, Quaternion.identity);
            Invoke("PlayEffect", 0.5f);
            yield return new WaitForSeconds(0.5f);
            Others[dir].SetActive(false);
        }
    }

    void LetItGo()
    {
        CanProceed = true;
    }


    void PlayEffect()
    {
        UIM.Clip_Sounds.PlayOneShot(UIM.Gear);
    }
}
