using UnityEngine;
using System.Collections;

public class PlayerControllerPC2 : MonoBehaviour
{
    public Transform Player, Spawner1, Spawner2, Obs1, Obs2;
    public GameObject[] Others;
    private Vector2 fp, lp;
    private float dragDistance = Screen.height * 0.15f;
    private bool CanProceed;

    // Use this for initialization
    void Start()
    {
        CanProceed = true;
        Player.position = Vector2.zero;
        InvokeRepeating("Spawn1", 2, 2);
    }

    // Update is called once per frame
    void Update()
    {

        //      if (Input.GetButtonDown("Fire1"))
        //      {
        //          iTween.MoveTo(Player.gameObject, iTween.Hash("y", 3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
        //          iTween.MoveTo(Player.gameObject, iTween.Hash("y", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
        //      }
        //      else if (Input.GetButtonDown("Fire3"))
        //      {
        //          iTween.MoveTo(Player.gameObject, iTween.Hash("y", -3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
        //          iTween.MoveTo(Player.gameObject, iTween.Hash("y", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
        //      }

        if (Input.GetMouseButtonDown(0))
        {
            fp = Input.mousePosition;
        }
        if (Input.GetMouseButtonUp(0))
        {
            lp = Input.mousePosition;
            float xDistance = Mathf.Abs(lp.x - fp.x);
            float yDistance = Mathf.Abs(lp.y - fp.y);

            if (xDistance > dragDistance || yDistance > dragDistance)
            {
                if (xDistance > yDistance)
                {
                    if (lp.x > fp.x)
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            iTween.MoveTo(Player.gameObject, iTween.Hash("x", 3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
                        }
                        iTween.MoveTo(Player.gameObject, iTween.Hash("x", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
                        Invoke("LetItGo", 0.3f);
                    }
                    else
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            iTween.MoveTo(Player.gameObject, iTween.Hash("x", -3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
                        }
                        iTween.MoveTo(Player.gameObject, iTween.Hash("x", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
                        Invoke("LetItGo", 0.3f);
                    }
                }
                else
                {
                    if (lp.y > fp.y)
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            iTween.MoveTo(Player.gameObject, iTween.Hash("y", 3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
                        }
                        iTween.MoveTo(Player.gameObject, iTween.Hash("y", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
                        Invoke("LetItGo", 0.3f);
                    }
                    else
                    {
                        if (CanProceed)
                        {
                            CanProceed = false;
                            iTween.MoveTo(Player.gameObject, iTween.Hash("y", -3.5f, "easetype", iTween.EaseType.linear, "time", 0.15f));
                        }
                        iTween.MoveTo(Player.gameObject, iTween.Hash("y", 0f, "easetype", iTween.EaseType.linear, "time", 0.15f, "delay", 0.15f));
                        Invoke("LetItGo", 0.3f);
                    }
                }
            }
        }
    }

    void Spawn1()
    {
        int rand = Random.Range(0, 2);
        if (rand == 0)
        {
            StartCoroutine(GetArrow(true));
        }
        else if (rand == 1)
        {
            StartCoroutine(GetArrow(false));
        }
    }

    IEnumerator GetArrow(bool dir)
    {
        yield return new WaitForSeconds(0.1f);
        if (dir)
        {
            Others[0].SetActive(true);
            iTween.MoveTo(Others[0], iTween.Hash("x", 6.2f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs1.gameObject, Spawner1.position, Quaternion.identity);
            yield return new WaitForSeconds(0.5f);
            Others[0].SetActive(false);
        }
        else
        {
            Others[1].SetActive(true);
            iTween.MoveTo(Others[1], iTween.Hash("y", -4.6f, "time", 0.2f, "looptype", iTween.LoopType.pingPong, "easetype", iTween.EaseType.linear));
            Instantiate(Obs2.gameObject, Spawner2.position, Quaternion.identity);
            yield return new WaitForSeconds(0.5f);
            Others[1].SetActive(false);
        }
    }

    void LetItGo()
    {
        CanProceed = true;
    }

}
